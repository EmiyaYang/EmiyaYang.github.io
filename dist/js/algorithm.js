"use strict";var testArr=[1,2,3,4,7,8];function swap(r,n,o){var t=r[n];r[n]=r[o],r[o]=t}function perm(r,n){if(n!==r.length)for(var o=n;o<r.length;o++)swap(r,n,o),perm(r,n+1),swap(r,n,o);else console.log(r)}function divide(r,n){return r<1||n<1?0:1===r||1===n?1:(r<n&&divide(r,r),r===n?1+divide(r,r-1):divide(r,n-1)+divide(r-n,n))}function hanoi(r,n,o,t){0<r&&(hanoi(r-1,n,t,o),hanoi(r-1,t,o,n))}function binarySearch(r,n,o,t){if(t<o)return-1;var e=Math.floor((o+t)/2);return n===r[e]?e:n<r[e]?binarySearch(r,n,o,e-1):binarySearch(r,n,e+1,t)}function binarySearch2(r,n){for(var o=0,t=r.length-1;o<=t;){var e=Math.floor((o+t)/2);if(n===r[e])return e;n<r[e]?t=e-1:o=e+1}return-1}var testArr2=[3,1,2];function showSubset(f){!function r(n,o){if(o>=f.length){for(var t=[],e=0;e<f.length;e++)n[e]&&t.push(f[e]);console.log(t)}else for(var a=0;a<=1;a++)n[o]=a,r(n,o+1)}([],0)}function showArray(t){function e(r,n){var o=t[r];t[r]=t[n],t[n]=o}!function r(n,o){if(o>=n.length)console.log(n);else for(var t=o;t<n.length;t++)e(o,t),r(n,o+1),e(o,t)}(t,0)}function backpackProblem(){var f=[2,2,3,4,5,5,6],i=[3,4,3,4,5,8,7],t=16,u=0,e=[];function l(r){for(var n=0,o=0;o<=r;o++)n+=f[o]*e[o];return n<=t}!function r(n,o){if(o>=f.length)!function(r){for(var n=0,o=0;o<r.length;o++)n+=i[o]*r[o];u<n&&(u=n)}(n);else for(var t=0;t<2;t++)if(n[o]=t,l(o)){for(var e=[],a=0;a<o;a++)e.push(n[a]);console.log(e),r(n,o+1)}}(e,0),console.log(u)}function backpackProblem2(){for(var r=[2,2,3,4,5,5,6],n=[3,4,3,4,5,8,7],o=[new Array(16).fill(0)],t=0;t<16;t++){o[t]=[0];for(var e=0;e<n.length;e++)o[t][e]=0!==t?t<r[e]?o[t][e-1]||0:Math.max((o[t-r[e]][e-1]||0)+n[e],o[t][e-1]||0):0}return o}function mergeSort(c){return function r(n,o){if(n<o){var t=Math.floor((n+o)/2);r(n,t),r(t+1,o),function(r,n,o){var t=[],e=r,a=n+1,f=r;for(;e<=n&&a<=o;)c[e]<=c[a]?t[f++]=c[e++]:t[f++]=c[a++];if(n<e)for(var i=a;i<=o;i++)t[f++]=c[i];else for(var u=e;u<=n;u++)t[f++]=c[u];for(var l=r;l<=o;l++)c[l]=t[l]}(n,t,o)}}(0,c.length-1),c}function quickSort(a){return function r(n,o){var t=void 0;1<a.length&&(t=function(r,n){var o=a[randomInt(r,n)],t=r,e=n;for(;t<=e;){for(;a[t]<o;)t++;for(;a[e]>o;)e--;if(e<t)break;f(t++,e--)}return t}(n,o),n<t-1&&r(n,t-1),t<o&&r(t,o));return a}(0,a.length-1);function f(r,n){var o=a[r];a[r]=a[n],a[n]=o}}function maxSubIncreaseArrary(t){var e=JSON.parse(JSON.stringify(t));e.sort();for(var a=[new Array(t.length+1).fill(0)],r=1;r<=t.length;r++){a[r]=[0];for(var n=1;n<=t.length;n++)t[r-1]===e[n-1]?a[r][n]=1+a[r-1][n-1]:a[r][n]=Math.max(a[r][n-1],a[r-1][n])}console.log(function r(n,o){if(0===n||0===o)return"";return t[n-1]===e[o-1]?r(n-1,o-1)+t[n-1]:a[n][o-1]>a[n-1][o]?r(n,o-1):r(n-1,o)}(t.length,e.length))}function maxSubIncreaseArrary2(e){var r=1,a=[];a[1]=e[0];for(var n=0;n<e.length;n++)e[n]>a[r]?a[++r]=e[n]:a[o(n,r)]=e[n];function o(r,n){if(e[r]<=a[1])return 1;for(var o=n,t=1;t<o-1;)a[n=Math.floor((t+o)/2)]<=e[r]?t=n:o=n;return o}console.log("最长单调递增子序列的长度为：",r)}function randomInt(r,n){return Math.floor(Math.random()*(n-r+1))+r}